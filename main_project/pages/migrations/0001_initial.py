# Generated by Django 4.1.13 on 2025-05-04 00:48

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Diseases',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('treatment', models.CharField(blank=True, max_length=255, null=True)),
                ('medicine_name', models.CharField(blank=True, max_length=50, null=True)),
                ('dosage', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'db_table': 'diseases',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ownerdaycarechat',
            fields=[
                ('receiver', models.CharField(blank=True, max_length=255, null=True)),
                ('sender', models.CharField(blank=True, max_length=255, null=True)),
                ('message', models.CharField(blank=True, max_length=255, null=True)),
                ('message_no', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'ownerdaycarechat',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ownervetchat',
            fields=[
                ('receiver', models.CharField(blank=True, max_length=255, null=True)),
                ('sender', models.CharField(blank=True, max_length=255, null=True)),
                ('message', models.CharField(blank=True, max_length=255, null=True)),
                ('message_no', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'ownervetchat',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Packages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('ratings', models.IntegerField(blank=True, null=True)),
                ('fee', models.IntegerField(blank=True, null=True)),
                ('number_of_walks', models.IntegerField(blank=True, null=True)),
                ('grooming', models.CharField(blank=True, max_length=30, null=True)),
                ('emergency_transport', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'db_table': 'packages',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Pet',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('type', models.CharField(blank=True, max_length=20, null=True)),
                ('name', models.CharField(blank=True, max_length=30, null=True)),
                ('breed', models.CharField(blank=True, max_length=20, null=True)),
                ('allergy', models.CharField(blank=True, max_length=50, null=True)),
                ('last_visit', models.DateField(blank=True, null=True)),
                ('test_result', models.CharField(blank=True, max_length=255, null=True)),
                ('vaccine_name', models.CharField(blank=True, max_length=30, null=True)),
                ('vaccine_date', models.DateField(blank=True, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pet',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Symptom',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('physical', models.CharField(blank=True, max_length=50, null=True)),
                ('behavioural', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'symptom',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('address', models.CharField(blank=True, max_length=100, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=11, null=True)),
                ('email', models.CharField(blank=True, max_length=50, null=True)),
                ('password', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'db_table': 'user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Daycare',
            fields=[
                ('id', models.OneToOneField(db_column='ID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='pages.user')),
                ('indoor', models.CharField(blank=True, max_length=20, null=True)),
                ('pet_type', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'daycare',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ownerappointvet',
            fields=[
                ('petid', models.OneToOneField(db_column='petID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='pages.pet')),
                ('time', models.CharField(blank=True, max_length=255, null=True)),
                ('fee', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=255, null=True)),
                ('prescription', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'ownerappointvet',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ownerbookpackage',
            fields=[
                ('petid', models.OneToOneField(db_column='petID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='pages.pet')),
                ('activity_log', models.CharField(blank=True, max_length=255, null=True)),
                ('date', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ownerbookpackage',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Pethassymptom',
            fields=[
                ('petid', models.OneToOneField(db_column='petID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='pages.pet')),
                ('days_since_onset', models.IntegerField(blank=True, null=True)),
                ('previously_seen', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'pethassymptom',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Petowner',
            fields=[
                ('userid', models.OneToOneField(db_column='UserID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='pages.user')),
                ('emergency_contact', models.CharField(blank=True, max_length=11, null=True)),
            ],
            options={
                'db_table': 'petowner',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Symptomindicatesdiseases',
            fields=[
                ('sid', models.OneToOneField(db_column='sID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='pages.symptom')),
                ('importance', models.IntegerField(blank=True, null=True)),
                ('probablity', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'symptomindicatesdiseases',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Vet',
            fields=[
                ('userid', models.OneToOneField(db_column='UserID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='pages.user')),
                ('specialization', models.CharField(blank=True, db_column='Specialization', max_length=150, null=True)),
            ],
            options={
                'db_table': 'vet',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ownerratesvet',
            fields=[
                ('vid', models.OneToOneField(db_column='vID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='pages.vet')),
                ('review', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'ownerratesvet',
                'managed': False,
            },
        ),
    ]
